#!/usr/bin/env python

# ---------------------------
# Name  : Ryan J. Prater
#       : Bryan Vuong
# EID   : rp22566
#       : bkv85
# CSID  : rprater
#       :
# CS373 - Downing - Project #3 - Netflix
# ---------------------------

"""
To run the program
    % python CacheNetflix.py < <>.txt > <>.txt
    % chmod ugo+x RunNetflix.py
    % CacheNetflix.py < <>.txt > <>.txt
"""

custNum = 2649429

# ----
# main
# ----


AvgCustRating_Netflix(sys.stdin, sys.stdout)




# ----
# AvgCustRating_Netflix
# ----
"""
    AvgCustRating should be passed the Training
    Set file and computes the avg rating for
    every customer_id
"""

def AvgCustRating_Netflix(r, w) :
    """ 
    read loop, eval, print
    r is a reader
    w is a writer
    """

    assert custNum > 0
    
    custTotalArray = [0] * custNum
    custNumArray = [0] * custNum
    
    # Loop through every line in r:
    #   Add the rating on each line to custTotalArray for each custID
    #   Add 1 for every rating read for a custID
    a = []
    while cache_read(r, a):
        custIDIndex = a[0] - 1
        custTotalArray[custIDIndex] += a[1]
        custNumArray[custIDIndex] += 1
        a = []

    AvgCustRating_Print(w, custTotalArray, custNumArray)

    
# ----
# AvgCustRating_Print
# ----
def AvgCustRating_Print (w, custTotalArray, custNumArray):
    
    """ 
    loop through arrays, calculate average, write
    w is a writer
    custTotalArray is an array with the sums of all the ratings for a custID (array indexes are the custID - 1)
    custNumArray is an array of the number of times a custID did a rating (array indexes are the custID - 1)
    """
    assert len(custTotalArray) == custNum
    assert len(custNumArray) == custNum

    # If custID hasn't rated anything, print anyways
    for i in range(custNum) :

        custID = i + 1

        # Last Line Case
        if i == custNum-1 :
            w.write(str(custID) + "," + str(round(custTotalArray[i]/custNumArray[i]))
        else:
            w.write(str(custID) + "," + str(round(custTotalArray[i]/custNumArray[i]) + "\n")
# ----
# cache_read
# ----

def cache_read (r, a):
    """
    reads ints into a
    r is a  reader
    a is an array of int
    return true if that succeeds, false otherwise
    """

    s = r.readline()
    if s == "" :
        return False
    l = s.split()
    for i in range(2) :
        a.append(l[i])
        
    return True

